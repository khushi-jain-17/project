continue
category
movie
user
get "/movies/#{movie.id}/edit"
continue
get "/movies/#{movie.id}/edit"
expect(response).to be_successful
continue
get "/movies/edit"
continue
 get "/movies/#{movie.id}/edit"
continue
 get "/movies/#{movie.id}/edit"
movies/:id/edit
/movies/#{movie.id}/edit
"renders edit"
edit
movie
category
user
continue
movie
category
user
continue
movie
category
user
continue
user
movie
category
user
      # let(:movie) { Movie.create(name: "Sample Movie", user: user, category: category) }
      # let(:category) { Category.create(name: "Sample Category") }
      # let(:movie) { Movie.create(name: "Sample Movie", user: user, category: category) }let(:user) { User.create(name: "sample") }
      # let(:category) { Category.create(name: "Sample Category") }
let(:user) { User.create(name: "sample") }
user
continue
movie
category
user
continue
Movie.create!(name:'eternals')
Movie.create(name:'eternals')
movie
movie.id
get "/movies/#{movie.id}/edit"
continue
params[:category].present?
c
params[:category].present?
c
params[:category].present?
continue
if @search.present?
c
@search = category.movies  if category.present? 
@search = Movie.where("lower(name) LIKE :keyword OR lower(description) LIKE :keyword OR released_on LIKE :keyword", keyword: "%#{@keyword}%")                   
c
@keyword = params[:search].downcase.strip
c
@keyword = params[:search].downcase.strip
continue
cc
params[:filter] == "popular"
c
params[:filter] == "popular"
params[:filter] == "upcoming"
c
params[:filter] == "upcoming"
params
c
params
params[:filter]
params[:filter] == "upcoming"
params[:filter] == "popular"
continue
</pre>
<pre>@movies = Movie.where(&quot;rating &gt;= 3.5&quot;)
params[:filter] == "popular"
params[:filter] == "upcoming"
continue
c
params[:filter]
params[:filter] == "upcomming"
continue
params[:filter]
continue
@movie
